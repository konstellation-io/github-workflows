name: New release workflow 

on:
  workflow_call:
    inputs:
      chart_file:
        required: true
        type: string
      chart_url:
        required: true
        type: string
      chart_path:
        required: true
        type: string
    secrets:
      pat:
        required: true

jobs:

  create-release-branch:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_branch.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat }}

      - name: Generate a new release branch
        id: release_branch
        uses: intelygenz/monorepo-tagger-action@v2.0.0
        with:
          release-branch-prefix: "release/v"
          mode: 'product'
          type: 'new-release-branch'
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}

  create-release-tag:
    needs: create-release-branch
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat }}
          ref: ${{ needs.create-release-branch.outputs.tag }}
          fetch-depth: 0

      - name: Generate a release
        id: release_tag
        uses: intelygenz/monorepo-tagger-action@v2.0.0
        with:
          mode: 'product'
          type: 'final'
          update-versions-in: '[{"file": "${{ inputs.chart_file }}", "property": "version"}]'
          tag-branch: ${{ needs.create-release-branch.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}
      
      - uses: azure/setup-helm@v1

      - uses: chrisdickinson/setup-yq@latest

      - name: Add repos
        run: |
          for i in $(yq r ct.yaml 'chart-repos'| sed -e 's/^- //')
          do
            NAME=$(echo $i | awk -F"=" '{print $1}')
            REPO=$(echo $i | awk -F"=" '{print $2}')
            helm repo add $NAME $REPO
          done
      
      - name: Generate chart release
        uses: helm/chart-releaser-action@v1.2.1
        with:
          charts_dir: ${{ inputs.chart_path }}
          charts_repo_url: ${{ inputs.chart_url }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
