name: Docker build workflow 

on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      component_helm:
        required: true
        type: string
      component_path:
        required: true
        type: string
      component_image:
        required: true
        type: string
      component_usertools_operator:
        required: false
        default: false
        type: boolean
      component_app:
        required: false
        default: false
        type: boolean
      chart_name:
        required: true
        type: string
    secrets:
      pat:
        required: true
      docker_username:
        required: true
      docker_token:
        required: true

jobs:
  create-release-tag:
    if: github.ref == 'refs/heads/main' # only in main branch
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.release_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat }}

      - name: Generate a release tag
        uses: intelygenz/monorepo-tagger-action@v1.0
        id: release_tag
        with:
          mode: 'component'
          type: 'final'
          component-prefix: "${{ inputs.component }}-"
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}


  create-fix-tag:
    if: startsWith(github.ref, 'refs/heads/release') # only in release branches
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.fix_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat }}

      - uses: chrisdickinson/setup-yq@latest
      - name: Get component versions
        id: component_version
        run: |
          TAG=`yq r helm/${{ inputs.chart_name }}/values.yaml '${{ inputs.component_helm }}.image.tag'`
          echo ::set-output name=TAG::${TAG}
          echo Component version in release branch is ${TAG}

      - name: Generate a fix
        uses: intelygenz/monorepo-tagger-action@v1.0
        id: fix_tag
        with:
          mode: 'component'
          type: 'fix'
          component-prefix: "${{ inputs.component }}-"
          current-tag: ${{ steps.component_version.outputs.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.pat }}

  build-release:
    if: | 
      always() && 
      (needs.create-release-tag.outputs.tag || needs.create-fix-tag.outputs.tag)
    needs: [create-release-tag, create-fix-tag]
    outputs:
      component-version: ${{ steps.set_tag.outputs.VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Login to DockerHub Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker_username }}
          password: ${{ secrets.docker_token }}

      - name: Store tag
        id: set_tag
        run: |
          VERSION=${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}
          VERSION=`echo $VERSION | sed "s/${{ inputs.component }}-//"`
          echo Tag set to ${VERSION}
          echo ::set-output name=VERSION::${VERSION}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./${{ inputs.component_path }}
          file: ./${{ inputs.component_path }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            konstellation/${{ inputs.component_image }}:${{ steps.version.outputs.tag }}
            konstellation/${{ inputs.component_image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - uses: actions/checkout@v2
        with:
          ref: ${{needs.create-release-tag.outputs.tag}}${{needs.create-fix-tag.outputs.tag}}
          token: ${{ secrets.pat }}

  chart-update-values:
    if: always() && needs.build-release.outputs.component-version
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.pat }}

      - uses: chrisdickinson/setup-yq@latest
      - name: Replace component versions
        run: |
          yq w -i helm/${{ inputs.chart_name }}/values.yaml '${{ inputs.component_helm }}.image.tag' ${{ needs.build-release.outputs.component-version }}
          echo 'component version' ${{ needs.build-release.outputs.component-version }}

      - if: ${{ inputs.component_usertools_operator }}
        name: Replace component versions if it's in usertools
        run: |
          yq w -i helm/${{ inputs.chart_name }}/values.yaml 'userToolsOperator.${{ inputs.component_helm }}.image.tag' ${{ needs.build-release.outputs.component-version }}

      - if: ${{ inputs.component_app }}
        name: Replace appVersion if the app principal has changed
        run: |
          yq w -i helm/${{ inputs.chart_name }}/Chart.yaml 'appVersion' ${{ needs.build-release.outputs.component-version }}
          echo 'appVersion' ${{ needs.build-release.outputs.component-version }}

      - name: Commit files
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

          if ${{ inputs.component_app }}; then
            git commit -m "Update chart ${{ inputs.chart_name }} version to ${{ needs.build-release.outputs.component-version }} [skip-ci]" -a
          else
            git commit -m "Update ${{ inputs.component }} component to ${{ needs.build-release.outputs.component-version }} [skip-ci]" -a
          fi

          git tag -f "${{ inputs.component }}-${{ needs.build-release.outputs.component-version }}"
          git push
          git push --tags --force
